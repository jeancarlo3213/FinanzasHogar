@page "/pasivos/editar/{id:int}"
@using FinanzasHogar.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<h3>Editar Pasivo</h3>

<div class="instructions">
    Por favor, edite los campos necesarios. Los campos marcados con * son obligatorios.
</div>

@if (pasivo != null)
{
    <EditForm Model="pasivo" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="tipo">Tipo</label>
            <InputText id="tipo" @bind-Value="pasivo.Tipo" class="form-control" disabled />
            <small class="form-text text-muted">El tipo no puede ser editado.</small>
        </div>
        <div class="form-group">
            <label for="detalle">Detalle</label>
            <InputText id="detalle" @bind-Value="pasivo.Detalle" class="form-control" disabled />
            <small class="form-text text-muted">El detalle no puede ser editado.</small>
        </div>
        <div class="form-group">
            <label for="monto">Monto *</label>
            <InputNumber id="monto" @bind-Value="pasivo.Monto" class="form-control" />
            <small class="form-text text-muted">Ingrese el monto del pasivo.</small>
            <ValidationMessage For="() => pasivo.Monto" />
        </div>
        <div class="form-group">
            <label for="fechaVencimiento">Fecha de Vencimiento *</label>
            <InputDate id="fechaVencimiento" @bind-Value="pasivo.FechaVencimiento" class="form-control" />
            <small class="form-text text-muted">Seleccione la fecha de vencimiento del pasivo.</small>
            <ValidationMessage For="() => pasivo.FechaVencimiento" />
        </div>
        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    </EditForm>
}
else
{
    <p>Cargando detalles del pasivo...</p>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="fullscreen-alert">
        <div class="alert alert-success">
            @successMessage
            <button type="button" class="btn btn-light" @onclick="CloseAlert">Aceptar</button>
        </div>
    </div>
}

@code {
    [Parameter] public int id { get; set; }

    private Pasivo pasivo;
    private string errorMessage;
    private string successMessage;

    protected override async Task OnInitializedAsync()
    {
        pasivo = await DbContext.Pasivos.FindAsync(id);
        if (pasivo == null)
        {
            Navigation.NavigateTo("/pasivos/ver");
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await DbContext.SaveChangesAsync();
            successMessage = "Pasivo actualizado exitosamente.";
        }
        catch (Exception ex)
        {
            errorMessage = $"Ocurrió un error al actualizar el pasivo: {ex.Message}";
        }
    }

    private void CloseAlert()
    {
        successMessage = null;
    }
}
