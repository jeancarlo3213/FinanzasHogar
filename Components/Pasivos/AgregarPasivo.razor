@page "/pasivos/agregar-pasivo/{phoneNumber}"
@using FinanzasHogar.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager Navigation
@inject ApplicationDbContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Agregar Pasivo</h3>

<div class="instructions">
    Por favor, complete este formulario para agregar un nuevo pasivo. Los campos marcados con * son obligatorios.
</div>

<EditForm Model="nuevoPasivo" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="tipo">Tipo *</label>
        <InputSelect id="tipo" @bind-Value="nuevoPasivo.Tipo" class="form-control">
            <option value="">Seleccione un tipo</option>
            @foreach (var tipo in TipoPasivo.Tipos)
            {
                <option value="@tipo">@tipo</option>
            }
        </InputSelect>
        <small class="form-text text-muted">Seleccione el tipo de pasivo, como préstamo, hipoteca, etc.</small>
        <ValidationMessage For="() => nuevoPasivo.Tipo" />
    </div>

    <div class="form-group">
        <label for="detalle">Detalle *</label>
        <InputText id="detalle" @bind-Value="nuevoPasivo.Detalle" class="form-control" />
        <small class="form-text text-muted">Ingrese un detalle específico del pasivo, como "Préstamo personal", "Hipoteca de casa", etc.</small>
        <ValidationMessage For="() => nuevoPasivo.Detalle" />
    </div>

    <div class="form-group">
        <label for="monto">Monto *</label>
        <InputNumber id="monto" @bind-Value="nuevoPasivo.Monto" class="form-control" />
        <small class="form-text text-muted">Ingrese el monto total del pasivo.</small>
        <ValidationMessage For="() => nuevoPasivo.Monto" />
    </div>

    <div class="form-group">
        <label for="fechaVencimiento">Fecha de Vencimiento *</label>
        <InputDate id="fechaVencimiento" @bind-Value="nuevoPasivo.FechaVencimiento" class="form-control" />
        <small class="form-text text-muted">Seleccione la fecha de vencimiento del pasivo.</small>
        <ValidationMessage For="() => nuevoPasivo.FechaVencimiento" />
    </div>

    <button type="submit" class="btn btn-primary">Agregar</button>
</EditForm>

@if (showSuccessMessage)
{
    <div class="fullscreen-alert">
        <div class="alert">
            <span>Pasivo agregado exitosamente.</span>
            <button class="btn" @onclick="HideSuccessMessage">Aceptar</button>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    [Parameter] public string phoneNumber { get; set; }

    private Pasivo nuevoPasivo = new Pasivo();
    private string errorMessage;
    private bool showSuccessMessage = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.Users.FirstOrDefaultAsync(u => u.PhoneNumber == phoneNumber);

        if (user == null)
        {
            errorMessage = "Usuario no autenticado.";
            Navigation.NavigateTo("/login");
            return;
        }

        nuevoPasivo.UsuarioId = user.Id;
        nuevoPasivo.FechaVencimiento = DateTime.Now.AddYears(1); // Inicializar con una fecha futura por defecto
    }

    private async Task HandleValidSubmit()
    {
        errorMessage = null;

        try
        {
            DbContext.Pasivos.Add(nuevoPasivo);
            await DbContext.SaveChangesAsync();
            showSuccessMessage = true;
            nuevoPasivo = new Pasivo(); // Limpiar el formulario
            nuevoPasivo.FechaVencimiento = DateTime.Now.AddYears(1); // Inicializar con una fecha futura por defecto
        }
        catch (Exception ex)
        {
            errorMessage = $"Ocurrió un error al agregar el pasivo: {ex.Message}";
        }
    }

    private void HideSuccessMessage()
    {
        showSuccessMessage = false;
    }
}
